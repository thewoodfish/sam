import type { BridgeBase, InitFn, WasmBaseInstance } from './types';
export declare class Bridge<C extends WasmBaseInstance> implements BridgeBase<C> {
    #private;
    constructor(createWasm: InitFn<C>);
    get error(): string | null;
    get type(): 'asm' | 'wasm' | 'none';
    get wbg(): WebAssembly.ModuleImports;
    get wasm(): C | null;
    init(createWasm?: InitFn<C>): Promise<C | null>;
    getObject(idx: number): unknown;
    dropObject(idx: number): void;
    takeObject(idx: number): unknown;
    addObject(obj: unknown): number;
    getInt32(): Int32Array;
    getUint8(): Uint8Array;
    getU8a(ptr: number, len: number): Uint8Array;
    getString(ptr: number, len: number): string;
    allocU8a(arg: Uint8Array): [number, number];
    allocString(arg: string): [number, number];
    resultU8a(): Uint8Array;
    resultString(): string;
}
